//@flow
import * as React from 'react';
import { Component } from 'react-simplified';
import Notify from '../Notify';
import { withRouter } from 'react-router-dom';
import ToolService from '../../services/ToolService';

const statusClosed = 3;
const statusProcesing = 2;
const statusOpen = 1;
const green = { color: 'green' };
const orange = { color: 'orange' };
const red = { color: 'red' };

/**
 * A cut-down CaseList component. Simplifies case display.
 */

class Inbox extends Component {
  /**
   * Generates HTML element with sub-elements that defines the Inbox component.
   * @returns {*} HTML element with sub-elements.
   */
  render() {
    return (
      <div>
        {this.props.optional ? this.props.optional : null}
        <div className={'card mx-3'}>
          <table className="table table-hover table-striped">
            <thead>
              <tr>
                <th scope="col">Tittel</th>
                <th scope="col">Status</th>
                <th scope="col" className={'desktop-table-column'}>
                  Kommune
                </th>
                <th scope="col" className={'desktop-table-column'}>
                  Dato opprettet
                </th>
                <th scope="col" className={'desktop-table-column'}>
                  Siste oppdatering
                </th>
              </tr>
            </thead>
            <tbody>
              {this.props.cases.map(c => (
                <tr key={c.case_id} style={{ cursor: 'pointer' }} onClick={event => this.onClickTableRow(event, c)}>
                  <td>{c.title.trim().length > 25 ? c.title.trim().substring(0, 25) : c.title.trim()}</td>
                  <td style={ToolService.getStatusColour(c.status_id)}>{c.status_name}</td>
                  <td className={'desktop-table-column'}>{c.region_name}</td>
                  <td className={'desktop-table-column'}>{ToolService.dateFormat(c.createdAt)}</td>
                  <td className={'desktop-table-column'}>{ToolService.dateFormat(c.updatedAt)}</td>
                </tr>
              ))}
            </tbody>
          </table>
          <p id={'noEntries'} style={{ color: '#666' }} hidden>
            Ingen innlegg Ã¥ vise.
          </p>
        </div>
      </div>
    );
  }

  /**
   * Listens for on-click events on the table rows. Initiates redirecting logic when called.
   * @param event Source event, generated by the HTML TD Element that created it.
   * @param c Case: case of which the table row indexes.
   */
  onClickTableRow(event, c) {
    this.props.history.push('/case/' + c.case_id);
  }
}

export default withRouter(Inbox);
